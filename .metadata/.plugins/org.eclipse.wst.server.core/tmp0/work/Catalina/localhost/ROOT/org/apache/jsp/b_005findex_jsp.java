/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2023-06-06 03:18:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class b_005findex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.main{\r\n");
      out.write("\t\twidth: 500px;\r\n");
      out.write("\t\theight: 400px;\r\n");
      out.write("\t\tposition: fixed;\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t.content{\r\n");
      out.write("\t\tpadding: 30px;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tfont-size: 16px;\r\n");
      out.write("\t\tline-height: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.btn{\r\n");
      out.write("\t\theight:25px;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tfont-size: 16px;\r\n");
      out.write("\t\tfont-weight: bold;\r\n");
      out.write("\t\tborder-radius: 3px;\r\n");
      out.write("\t\tbackground: #f00;\r\n");
      out.write("\t\tcolor: #fff;\r\n");
      out.write("\t\tposition: absolute;\t\t\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.list{\r\n");
      out.write("\t\twidth: 150px;\r\n");
      out.write("\t\tright: 210px;\r\n");
      out.write("\t\tbottom: 280px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.register{\r\n");
      out.write("\t\twidth: 150px;\r\n");
      out.write("\t\tright: 50px;\r\n");
      out.write("\t\tbottom: 280px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"main\">\r\n");
      out.write("\t\t<div class=\"content\">Welcome! 제가 처음으로 만든 풀스택 웹 페이지입니다! </div>\r\n");
      out.write("\t\t<a href=\"/board/list\" class=\"btn list\">글목록조회로 Go!</a>\r\n");
      out.write("\t\t<a href=\"/board/register\" class=\"btn register\">글등록으로 Go!</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t<form action=\"/board/register\" method=\"post\">\r\n");
      out.write("\t제목 : <input type=\"text\" name=\"title\" /> <br>\r\n");
      out.write("\t내용 : <input type=\"text\" name=\"content\" /> <br>\r\n");
      out.write("\t작성자 : <input type=\"text\" name=\"writer\" /> <br>\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"submit\" value=\"글등록\" />\r\n");
      out.write("\t<input type=\"submit\" value=\"취소\" />\r\n");
      out.write("\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t<h2>GET방식으로 데이터 전송</h2>\r\n");
      out.write("\t<form action=\"sample/ex01\">\r\n");
      out.write("\t\t<p> 이름 : <input type=\"text\" name=\"name\"> </p>\r\n");
      out.write("\t\t<p> 나이 : <input type=\"text\" name=\"age\"> </p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"submit\" value=\"전송!\">\r\n");
      out.write("\t\t<input type=\"reset\" value=\"취소!\">\r\n");
      out.write("\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
