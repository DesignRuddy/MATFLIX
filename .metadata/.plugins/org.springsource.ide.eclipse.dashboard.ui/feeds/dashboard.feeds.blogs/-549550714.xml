<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 13 Jun 2023 14:42:03 GMT</lastBuildDate><item><title><![CDATA[Spring Shell 3.0.5 and 3.1.1 are now available]]></title><link>https://spring.io/blog/2023/06/13/spring-shell-3-0-5-and-3-1-1-are-now-available</link><guid isPermaLink="true">https://spring.io/blog/2023/06/13/spring-shell-3-0-5-and-3-1-1-are-now-available</guid><dc:creator><![CDATA[Janne Valkealahti]]></dc:creator><pubDate>Tue, 13 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Spring Shell 3.0.5 and 3.1.1 are now available&lt;/p&gt;
&lt;p&gt;On behalf of the team and everyone who has contributed, I&apos;m happy to announce that Spring Shell &lt;code&gt;3.0.5&lt;/code&gt; and &lt;code&gt;3.1.1&lt;/code&gt; has been released and are now available from Maven Central.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://github.com/spring-projects/spring-shell/releases/tag/v3.0.5&quot;&gt;release notes 3.0.5&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-projects/spring-shell/releases/tag/v3.1.1&quot;&gt;release notes 3.1.1&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;h3&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-shell/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-shell&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-shell/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-shell/docs/3.1.1/docs/index.html&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - June 13th, 2023]]></title><link>https://spring.io/blog/2023/06/13/this-week-in-spring-june-13th-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/06/13/this-week-in-spring-june-13th-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 13 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;h1&gt;This Month in Spring - June 13th, 2023&lt;/h1&gt;
&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! I am in beautiful Taipei, eating delicious food and meeting amazing people in the sweltering weather. How&apos;re you doin&apos;? I&apos;ve got to join a meeting, so I&apos;ll make this quick. One quick thing though: Microsoft&apos;s Mark Heckler and I are doing a webinar later today - &lt;a href=&quot;https://tanzu.vmware.com/developer/tv/golden-path/39/&quot;&gt;register now and join us&lt;/a&gt; - looking at how to take Spring Boot applications to production on Microsoft Azure and with Microsoft technologies. This is going to be a ton of fun, don&apos;t miss it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love Matt&apos;s latest tutorial, &lt;a href=&quot;https://www.youtube.com/watch?v=UsXcWXg216E&quot;&gt;Getting Started with Spring Boot and SAML - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/06/07/securing-spring-boot-applications-with-ssl&quot;&gt;Securing Spring Boot Applications With SSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.atomicjar.com/2023/05/spring-boot-3-1-0-testcontainers-for-testing-and-local-development/&quot;&gt;Spring Boot Application Testing and Development with Testcontainers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/06/08/spring-security-kerberos-2-0-0-available-now&quot;&gt;Spring Security Kerberos 2.0.0 available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/744698918/0/baeldung~Why-Is-Field-Injection-Not-Recommended&quot;&gt;Why Is Field Injection Not Recommended?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/tschuehly/status/1665810099812683778?s=12&amp;#x26;t=n-UflcIbnx1lage-TBk0Cg&quot;&gt;Thomas Schuely just announced the latest iteration of his project Spring ViewComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://connect.tanzu.vmware.com/Event_Spring_One_Tour_Q224_KR.html&quot;&gt;I&apos;ll be speaking in Seoul, register now and join me!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://connect.tanzu.vmware.com/SpringOne_Tour_SG_July.html&quot;&gt;I&apos;ll be speaking in Singapore, register now and join me!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webcommwebinar.kktix.cc/events/0616&quot;&gt;I&apos;ll be speaking here in Taipei,  register now and join me!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://connect.tanzu.vmware.com/Bootiful_Spring_Boot_3x_au.html&quot;&gt;I&apos;ll be speaking in Sydney, register now and join me!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It was great to &lt;a href=&quot;https://spring.io/blog/2023/06/08/a-bootiful-podcast-microsofts-sean-li-on-azure-and-spring-boot&quot;&gt;have Microsoft&apos;s Sean Li on a Bootiful Podcast last week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do &lt;em&gt;not&lt;/em&gt; miss this epic blog by Scott Frederick on securing Spring Boot applications with the &lt;a href=&quot;https://spring.io/blog/2023/06/07/securing-spring-boot-applications-with-ssl&quot;&gt;new support for SSL in Spring Boot 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Microsoft¡¯s Sean Li on Azure and Spring Boot]]></title><link>https://spring.io/blog/2023/06/08/a-bootiful-podcast-microsofts-sean-li-on-azure-and-spring-boot</link><guid isPermaLink="true">https://spring.io/blog/2023/06/08/a-bootiful-podcast-microsofts-sean-li-on-azure-and-spring-boot</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 08 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this (relatively quick) installment, recorded live from the lovely Spring I/O 2023, Josh Long talks to Microsoft&apos;s Sean Li about some of the latest and greatest in the Azure ecosystem for Spring developers.&lt;/p&gt;
&lt;iframe title=&quot;Microsoft¡¯s Sean Li on Azure and Spring Boot&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=c8in6-142c418-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Spring Security Kerberos 2.0.0 available now]]></title><link>https://spring.io/blog/2023/06/08/spring-security-kerberos-2-0-0-available-now</link><guid isPermaLink="true">https://spring.io/blog/2023/06/08/spring-security-kerberos-2-0-0-available-now</guid><dc:creator><![CDATA[Janne Valkealahti]]></dc:creator><pubDate>Thu, 08 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I&apos;m happy to announce that a Spring Security Kerberos &lt;code&gt;2.0.0&lt;/code&gt; is now available from maven central.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://projects.spring.io/spring-security-kerberos/&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-security-kerberos&quot;&gt;GitHub&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-security-kerberos/issues&quot;&gt;Issues&lt;/a&gt; | &lt;a href=&quot;https://docs.spring.io/spring-security-kerberos/reference/&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Securing Spring Boot Applications With SSL]]></title><link>https://spring.io/blog/2023/06/07/securing-spring-boot-applications-with-ssl</link><guid isPermaLink="true">https://spring.io/blog/2023/06/07/securing-spring-boot-applications-with-ssl</guid><dc:creator><![CDATA[Scott Frederick]]></dc:creator><pubDate>Wed, 07 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Secure Sockets Layer (SSL) and Transport Layer Security (TLS) are key components of securing communications between systems in a layered or service-oriented architecture. Spring Boot applications in such an architecture often accept incoming network connections or create outgoing connections, and developers are tasked with configuring applications to work in such a secure environment.&lt;/p&gt;
&lt;p&gt;If you&apos;ve ever worked with the Java security and SSL APIs, you&apos;re probably aware that this is not a particularly fun task. It often involves multiple trips to &lt;a href=&quot;https://stackoverflow.com&quot;&gt;stackoverflow.com&lt;/a&gt; to copy and paste code. There are a few factors that make working with SSL painful.&lt;/p&gt;
&lt;p&gt;First off, you might be provided trust material such as certificates and private keys for production use. You might need to generate different trust material for pre-production testing (often using self-signed certificate authorities). This trust material is typically in the form of Java keystore files in either the JKS or PKCS #12 format, or they might be PEM-encoded text files. Each of these file types require different handling.&lt;/p&gt;
&lt;p&gt;Once you have the trust material, you need to transform it into something that can be passed to Java connection APIs. Things can get difficult here because connection APIs can be configured in a variety of ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some want you to provide keystore and truststore &lt;code&gt;java.security.KeyStore&lt;/code&gt; instances.&lt;/li&gt;
&lt;li&gt;Some want you to provide &lt;code&gt;javax.net.ssl.KeyManager&lt;/code&gt; and &lt;code&gt;javax.net.ssl.TrustManager&lt;/code&gt; instances.&lt;/li&gt;
&lt;li&gt;Some want you to provide a &lt;code&gt;javax.net.ssl.SSLContext&lt;/code&gt; instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSL is also pretty low-level, so you often need to peel back a few layers of abstraction to get to the thing that needs to be configured using objects from the &lt;code&gt;java.security&lt;/code&gt; or &lt;code&gt;java.net.ssl&lt;/code&gt; packages. For example, if you want to configure SSL on a Spring &lt;code&gt;RestTemplate&lt;/code&gt; you need to get down to the &lt;code&gt;ClientHttpRequestFactory&lt;/code&gt; that&apos;s backing it. For a typical Spring Boot application that could be an &lt;code&gt;HttpComponentsClientHttpRequestFactory&lt;/code&gt;, &lt;code&gt;OkHttp3ClientHttpRequestFactory&lt;/code&gt; or &lt;code&gt;SimpleClientHttpRequestFactory&lt;/code&gt;. Each of these provide different configuration APIs.&lt;/p&gt;
&lt;p&gt;Configuring connections to use SSL or TLS is not new to Spring Boot, but the team decided to take a holistic view of what was currently supported and look for opportunities to improve and expand support. We hope you will find that Spring Boot 3.1 makes SSL configuration much easier.&lt;/p&gt;
&lt;h2&gt;Introducing SSL Bundles&lt;/h2&gt;
&lt;p&gt;Spring Boot 3.1 introduces the concept of SSL bundles for configuring and consuming custom SSL trust material, such as keystores, certificates, and private keys. Once configured, a bundle can be applied to one or more connections using configuration properties or APIs.&lt;/p&gt;
&lt;h3&gt;Configuring SSL Bundles&lt;/h3&gt;
&lt;p&gt;Properties used to configure SSL trust material are under the &lt;code&gt;spring.ssl.bundle&lt;/code&gt; prefix in an &lt;code&gt;application.yaml&lt;/code&gt; or &lt;code&gt;application.properties&lt;/code&gt; file.  Two top-level groupings are available to reflect the unique information needed to configure trust material of different types.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spring.ssl.bundle.jks&lt;/code&gt; can be used to configure bundles using Java keystore files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring.sll.bundle.pem&lt;/code&gt; can be used to configure bundles using PEM-encoded text files.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One or more bundles of each type can be configured, with each configured bundle given a user-provided name. The name is used when applying the bundle with properties or retrieving it with an API.&lt;/p&gt;
&lt;p&gt;The following example &lt;code&gt;application.yaml&lt;/code&gt; file shows the configuration of two SSL bundles. The first is named &lt;code&gt;server&lt;/code&gt; and defines a Java Keystore file (in the PKCS #12 format) that could be used to secure an embedded web server. The second is named &lt;code&gt;client&lt;/code&gt; and defines a trust store with a PEM-encoded certificate file that could be used to secure the client side of a connection to a server that requires client authentication.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;spring:
  ssl:
    bundle:
      jks:
        server:
          key:
            alias: &quot;server&quot;
          keystore:
            location: &quot;classpath:server.p12&quot;
            password: &quot;secret&quot;
            type: &quot;PKCS12&quot;
      pem:
        client:
          truststore:
            certificate: &quot;classpath:client.crt&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#features.ssl&quot;&gt;Spring Boot reference documentation&lt;/a&gt; as well as the &lt;a href=&quot;https://github.com/spring-projects/spring-boot/blob/main/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ssl/JksSslBundleProperties.java&quot;&gt;JksSslBundleProperties&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-projects/spring-boot/blob/main/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/ssl/PemSslBundleProperties.java&quot;&gt;PemSslBundleProperties&lt;/a&gt; classes for more details on the available configuration properties.&lt;/p&gt;
&lt;h3&gt;Using Auto-configured SSL Bundles&lt;/h3&gt;
&lt;p&gt;Spring Boot uses the &lt;code&gt;spring.ssl.bundle&lt;/code&gt; properties to create objects that provide access to the specified trust material.&lt;/p&gt;
&lt;p&gt;As mentioned above, there are three levels of abstraction provided by the Java security and SSL APIs to expose trust material that has been read from either Java keystore or PEM files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;java.security.KeyStore&lt;/code&gt; instances used as keystores and truststores.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;javax.net.ssl.KeyManager&lt;/code&gt; and &lt;code&gt;javax.net.ssl.TrustManager&lt;/code&gt; instances.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;javax.net.ssl.SSLContext&lt;/code&gt; instances.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the lowest level you might need truststore and keystore objects to apply SSL to a connection. These can be accessed using an &lt;code&gt;SslStoreBundle&lt;/code&gt; interface as shown here:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public interface SslStoreBundle {

	KeyStore getKeyStore();

	String getKeyStorePassword();

	KeyStore getTrustStore();

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;KeyManager&lt;/code&gt; and &lt;code&gt;TrustManager&lt;/code&gt; instances can be derived from a keystore and truststore. These can be accessed using an &lt;code&gt;SslManagerBundle&lt;/code&gt; interface:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public interface SslManagerBundle {

	KeyManager[] getKeyManagers();

	KeyManagerFactory getKeyManagerFactory();

	TrustManager[] getTrustManagers();

	TrustManagerFactory getTrustManagerFactory();

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, an &lt;code&gt;SSLContext&lt;/code&gt; can be created from a &lt;code&gt;KeyManager&lt;/code&gt; and &lt;code&gt;TrustManager&lt;/code&gt; and accessed with a &lt;code&gt;createSslContext&lt;/code&gt; factory method.&lt;/p&gt;
&lt;p&gt;Putting all this together, we have an &lt;code&gt;SslBundle&lt;/code&gt; interface with access to the various different configuration styles:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public interface SslBundle {

	SslStoreBundle getStores();

	SslManagerBundle getManagers();

	SSLContext createSslContext() {

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the &lt;a href=&quot;https://github.com/spring-projects/spring-boot/blob/main/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ssl/SslBundle.java&quot;&gt;source code&lt;/a&gt; for the full list of methods in &lt;code&gt;SslBundle&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The collection of configured &lt;code&gt;SslBundle&lt;/code&gt;s are made available in an &lt;code&gt;SslBundles&lt;/code&gt; bean that can be auto-wired into other Spring beans:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public interface SslBundles {

	SslBundle getBundle(String bundleName) throws NoSuchSslBundleException;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example of using &lt;code&gt;SslBundles&lt;/code&gt; to retrieve and apply an &lt;code&gt;SSLContext&lt;/code&gt; might look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Component
public class MyComponent {

    public MyComponent(SslBundles sslBundles) {
        SslBundle sslBundle = sslBundles.getBundle(&quot;client&quot;);
        SSLContext sslContext = sslBundle.createSslContext();
        // do something with the created sslContext
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Securing REST Clients&lt;/h2&gt;
&lt;p&gt;An exciting new area of SSL capabilities that is enabled in Spring Boot 3.1 is the configuration of REST clients. Spring Boot support for customizing a &lt;code&gt;RestTemplate&lt;/code&gt; or &lt;code&gt;WebClient&lt;/code&gt; now includes the ability to apply an SSL bundle to secure the connection between the client and the REST service.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RestTemplateBuilder&lt;/code&gt; has a new &lt;code&gt;setSslBundle()&lt;/code&gt; method that accepts an SSL bundle retrieved from the auto-configured &lt;code&gt;SslBundles&lt;/code&gt;, as shown in this example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Service
public class MyService {

    private final RestTemplate restTemplate;

    public MyService(RestTemplateBuilder restTemplateBuilder, SslBundles sslBundles) {
        this.restTemplate = restTemplateBuilder.setSslBundle(sslBundles.getBundle(&quot;mybundle&quot;)).build();
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A &lt;code&gt;WebClientSsl&lt;/code&gt; interface lets an SSL bundle be retrieved and applied to a &lt;code&gt;WebClient.Builder&lt;/code&gt;, as shown in this example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Service
public class MyService {

    private final WebClient webClient;

    public MyService(WebClient.Builder webClientBuilder, WebClientSsl ssl) {
        this.webClient = webClientBuilder.baseUrl(&quot;https://example.org&quot;).apply(ssl.fromBundle(&quot;mybundle&quot;)).build();
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Securing Data Service Connections&lt;/h2&gt;
&lt;p&gt;Spring Boot makes it easy to configure client libraries used to connect from an application to data services. These client libraries are good examples of APIs that use any of the three levels of Java security and SSL APIs for configuration.&lt;/p&gt;
&lt;p&gt;Prior to 3.1, some form of SSL configuration was available for many of the data services for which Spring Boot provides auto-configuration. However, the level of support and the properties used for configuration were inconsistent across services. Most data services auto-configuration properties now have similar &lt;code&gt;ssl&lt;/code&gt; structures, providing a much higher level of consistency across services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cassandra - &lt;code&gt;spring.cassandra.ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Couchbase - &lt;code&gt;spring.couchbase.env.ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Elasticsearch - &lt;code&gt;spring.elasticsearch.restclient.ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MongoDB - &lt;code&gt;spring.data.mongodb.ssl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Redis - &lt;code&gt;spring.data.redis.ssl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most services have a &lt;code&gt;*.ssl.enabled&lt;/code&gt; property which will enable SSL support in the client library using trust material contained in the Java runtime &lt;code&gt;cacerts&lt;/code&gt;. A &lt;code&gt;*.ssl.bundle&lt;/code&gt; property applies a named SSL bundle to enable client library SSL support with custom trust material from the bundle. This makes the configuration much more consistent and allows for the same trust material to be applied to multiple connections, reducing the amount of properties or YAML configuration.&lt;/p&gt;
&lt;p&gt;To provide this level of consistency, some previous SSL-related properties have been deprecated. See the &lt;a href=&quot;https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.1.0-Configuration-Changelog&quot;&gt;configuration properties changelog&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;JDBC connections are an obvious omission from this list. We plan to apply the SSL bundle approach to JDBC connections in an upcoming Spring Boot release.&lt;/p&gt;
&lt;h2&gt;Securing Embedded Web Servers&lt;/h2&gt;
&lt;p&gt;All embedded web servers supported by Spring Boot can be configured to secure incoming connections with SSL by using &lt;code&gt;server.ssl.*&lt;/code&gt; properties. Java keystore files have been supported since the inception of Spring Boot, and PEM-encoded files have been supported since 2.7.&lt;/p&gt;
&lt;p&gt;The number of properties under the &lt;code&gt;server.ssl&lt;/code&gt; prefix has grown over time, and the lack of structure made it difficult to tell which properties could be used together and which were mutually exclusive. The previous &lt;code&gt;server.ssl.*&lt;/code&gt; properties continue to be supported, but a new &lt;code&gt;server.ssl.bundle&lt;/code&gt; property can be used to apply a configured SSL bundle to an embedded web server.&lt;/p&gt;
&lt;p&gt;The following two examples are functionally the same:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  ssl:
    key-alias: ¡°server¡±
    key-password: ¡°keysecret¡±
    key-store: &quot;classpath:server.p12&quot;
    key-store-password: &quot;storesecret&quot;
    client-auth: NEED    
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;spring:
  ssl:
    bundle:
      jks:
        web-server:
          key:
            alias: &quot;server&quot;
            password: ¡°keysecret¡±
          keystore:
            location: &quot;classpath:server.p12&quot;
            password: &quot;storesecret&quot;
server:
  ssl:
    bundle: ¡°web-server¡±
    client-auth: NEED
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The older structure is more concise, but the newer structure reduces the chance of mis-configuration and allows the same SSL bundle to be used on multiple connections.&lt;/p&gt;
&lt;p&gt;Similar changes have been made to the &lt;code&gt;management.server.ssl&lt;/code&gt; and &lt;code&gt;spring.rsocket.server.ssl&lt;/code&gt; properties.&lt;/p&gt;
&lt;h2&gt;Future Work&lt;/h2&gt;
&lt;p&gt;We really hope you find SSL bundles a useful feature of Spring Boot 3.1.
If you find any other technologies that you think we should add SSL support for, please raise a &lt;a href=&quot;https://github.com/spring-projects/spring-boot/issues&quot;&gt;GitHub issue&lt;/a&gt; and we&apos;ll consider it for a future release.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - June 6th, 2023]]></title><link>https://spring.io/blog/2023/06/06/this-week-in-spring-june-6th-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/06/06/this-week-in-spring-june-6th-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 06 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! And what an insane week it&apos;s been! Long story short, I&apos;ve spent 10-12 hours a day over the last five days migrating a dozen differnet applications and services from one GKE cluster to another, taking the time to update things as much as possible. In the case of at least one Vue.js application, this meant some major reworking of the codebase. It&apos;s also meant rewriting lots of Github Actions with the new best-practices and patterns, which I confess has been painful.&lt;/p&gt;
&lt;p&gt;Once everything&apos;s fully migrated (soon, I hope!), I think a next step will be to see what I can do to simplify things in a consistent way across all the services. This means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;building a new Kubernetes CRD and controller to encapsulate the YAML I find myself repeating across all my services. It&apos;s tedious and error-prone and could be boiled down to a few lines in one YAML file for 90% of my workloads!&lt;/li&gt;
&lt;li&gt;building a new Github Action that does a lot of the Kubernetes connectivity so I don&apos;t have to copy-and-paste the same four error-prone actions across each Github Actions workflow.&lt;/li&gt;
&lt;li&gt;Moving everything to Gradle and packaging up things - like my version management and common required dependencies - in a shared plugin which in turn furnishes required plugins, dependencies, and delegates to Spring Boot 3.1 and the like. 3.1&apos;s a great place to be for these applications already, it&apos;d just be nice to know that when it comes time to move to 3.2, or whatever, I can make the change in one place and everywhere else benefits.&lt;/li&gt;
&lt;li&gt;As part of the work, I&apos;ve decided I wanted to start eliminating some of the crufty, bespoke authentication mechanisms in my various web applications. I&apos;ve stood up an instance of the Spring Authorization Server. (Hurray!) By the way, if you want to see &lt;em&gt;the&lt;/em&gt; easiest and coolest demo of how to get an OAuth client, an OAuth resource server, an OAuth Authorization Server, all from scratch on start.spring.io, do check &lt;a href=&quot;https://www.youtube.com/watch?v=7zm3mxaAFWk&quot;&gt;out this video that Steve Reisenberg&lt;/a&gt; and I put together recently! It&apos;s insane how easy it is to get everything working, and the actual &lt;a href=&quot;https://github.com/developer-advocacy/joshlong-authorization-api&quot;&gt;production code&lt;/a&gt; I&apos;m going to take to my production environment is only slightly more complex)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway, all of that is temporarily on hold as I am in Dallas, Texas at the moment meeting some customers and enjoying the warm weather. But we do have a &lt;em&gt;ton&lt;/em&gt; of stuff to look at this week, and I&apos;ve got a customer to visit, so let&apos;s get this underway!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/06/02/a-bootiful-podcast-spring-boot-team-member-moritz-halbritter-m_halbritter&quot;&gt;A Bootiful Podcast: Spring Boot team member Moritz Halbritter (@m_halbritter)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/743713742/0/baeldung~Spring-Boot-Properties-Prefix-Must-Be-in-Canonical-Form&quot;&gt;Spring Boot Properties Prefix Must Be in Canonical Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@dimas.setyawan/spring-boot-3-1-%EF%B8%8F-docker-compose-28a6a53af657&quot;&gt;Dimas Adriyanto Setyawan has a nice blog looking at the new Docker Compose support in Spring Boot 3.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jetbrains &lt;a href=&quot;https://kotlinlang.org/docs/jvm-get-started-spring-boot.html&quot;&gt;Getting Started with Spring Boot and Kotlin&lt;/a&gt; page has been nicely updated&lt;/li&gt;
&lt;li&gt;With a title like this, how could you &lt;em&gt;not&lt;/em&gt; read?? &lt;a href=&quot;https://medium.com/@corradodebari/how-to-use-chatgpt-openai-apis-from-oracle-backend-for-spring-boot-parse-5fcc0ffa4bcd&quot;&gt;How to use ChatGPT/OpenAI APIs from Oracle Backend for Spring Boot/Parse.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/743612807/0/baeldung~The-Difference-Between-findById-and-getById-in-Spring-Data&quot;&gt;The Difference Between findById and getById in Spring Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I&apos;ll &lt;a href=&quot;https://connect.tanzu.vmware.com/Bootiful_Spring_Boot_3x_au.html&quot;&gt;be speaking in Sydney, Australia &lt;/a&gt;. Come out and join me?&lt;/li&gt;
&lt;li&gt;I&apos;ll be &lt;a href=&quot;https://webcommwebinar.kktix.cc/events/0616&quot;&gt;speaking in Taipei&lt;/a&gt;. Come out and join me?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/tschuehly/status/1665810099812683778?s=12&amp;#x26;t=n-UflcIbnx1lage-TBk0Cg&quot;&gt;Thomas Schuehly just released v0.5.4 of Spring ViewComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I love this: a deep-ish [review of some of the various Spring &lt;code&gt;ApplicationEvent&lt;/code&gt;s](Spring Boot¡¯s Application Events): nice job, Truong Bui!&lt;/li&gt;
&lt;li&gt;Interesting: &lt;a href=&quot;https://medium.com/@claudiorauso/local-testing-spring-gcp-firestore-57f2ffc49c1e&quot;&gt;how to locally test GCP Firestore and Spring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Spring Boot team member Moritz Halbritter (@m_halbritter)]]></title><link>https://spring.io/blog/2023/06/02/a-bootiful-podcast-spring-boot-team-member-moritz-halbritter-m_halbritter</link><guid isPermaLink="true">https://spring.io/blog/2023/06/02/a-bootiful-podcast-spring-boot-team-member-moritz-halbritter-m_halbritter</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 02 Jun 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment &lt;a href=&quot;https://youtube.com/@coffeesoftware&quot;&gt;Josh Long (YouTube.com/@coffeesoftware.com)&lt;/a&gt; talks to Spring Boot team member &lt;a href=&quot;https://twitter.com/m_halbritter&quot;&gt;Moritz Halbritter (@m_halbritter)&lt;/a&gt;&lt;/p&gt;
&lt;iframe title=&quot;Spring Boot team member Moritz Halbritter &quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=9qczt-14233f0-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - May 30th, 2023]]></title><link>https://spring.io/blog/2023/05/30/this-week-in-spring-may-30th-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/05/30/this-week-in-spring-may-30th-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 30 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This installment I write on the day of my daughter&apos;s High School graduation, an auspicious day indeed!  There&apos;s a lot to get through this week, though, and I have a graduation to get to, so let&apos;s dive right in!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/24/spring-authorization-server-is-on-spring-initializr&quot;&gt;Spring Authorization Server is on Spring Initializr!&lt;/a&gt; This is my favorite technical news of the week, by far! I loved it so much that I even invited its author, Steve Riesenberg, on my little show. He and I (well, mostly him) did an &lt;em&gt;awesome&lt;/em&gt; live demo setting up an Authorization Server, a Resource server, and OAuth OIDC client with login support. We did it all from scratch using Spring Boot 3.1, too! &lt;a href=&quot;https://www.youtube.com/watch?v=7zm3mxaAFWk&quot;&gt;Check this out&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/25/spring-cloud-2022-0-3-aka-kilburn-is-available&quot;&gt;Spring Cloud 2022.0.3 (aka Kilburn) Is Available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/25/a-bootiful-podcast-java-developer-advocate-billy-korando-on-the-latest-and&quot;&gt;A Bootiful Podcast: Java Developer Advocate Billy Korando on the latest and greatest in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/25/spring-shell-2-1-10-3-0-4-and-3-1-0-are-now-available&quot;&gt;Spring Shell 2.1.10, 3.0.4 and 3.1.0 are now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/23/unleash-spring-apps-in-a-flex-environment-with-azure-spring-apps-consumption&quot;&gt;Unleash Spring apps in a flex environment with Azure Spring Apps Consumption and Dedicated plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/743373134/0/baeldung~Configuring-Gradle-Tasks-in-Spring-Boot&quot;&gt;Configuring Gradle Tasks in Spring Boot 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/743110019/0/baeldung~Securing-Spring-Boot-API-With-API-Key-and-Secret&quot;&gt;Securing Spring Boot API With API Key and Secret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/742615499/0/baeldung~Spring-Boot-Actuator-Without-Spring-Boot&quot;&gt;Spring Boot Actuator Without Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/05/25/spring-security-kerberos-2-0-0-rc2-available-now&quot;&gt;Spring Security Kerberos 2.0.0-RC2 available now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Our friends at Axon did a profile on me. You might like it: &lt;a href=&quot;https://podcast.axoniq.io/e/1n22r1rn-spring-and-axon-with-josh-long?hss_channel=tw-803611480864227328&quot;&gt;Spring and Axon with Josh Long&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/742597193/0/baeldung~Write-Console-Output-to-Text-File-in-Java&quot;&gt;Write Console Output to Text File in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hey Taiwan, I&apos;ll be at the Taipei JUG on July 16th! &lt;a href=&quot;https://webcommwebinar.kktix.cc/events/0616&quot;&gt;êÉË¬Î¡Ðü x TWJUG  Bootiful Spring Boot 3 ØóÞ¨Ðüâúá³ö©£¬Java ÓÞãêÊ½Óð&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/JavaAtMicrosoft/status/1661046990514561024&quot;&gt;Harness the power of Azure Spring Apps! Experience flexibility with Consumption and Dedicated plans. Tailor the perfect profile for every app, seamlessly mix and match, and al&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://williamx.hashnode.dev/java-your-first-programming-language&quot;&gt;Looking to pick up your first programming language? Why not Java?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud 2022.0.3 (aka Kilburn) Is Available]]></title><link>https://spring.io/blog/2023/05/25/spring-cloud-2022-0-3-aka-kilburn-is-available</link><guid isPermaLink="true">https://spring.io/blog/2023/05/25/spring-cloud-2022-0-3-aka-kilburn-is-available</guid><dc:creator><![CDATA[Spencer Gibb]]></dc:creator><pubDate>Thu, 25 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the community, I am pleased to announce that the General Availability (RELEASE) of the &lt;a href=&quot;https://cloud.spring.io&quot;&gt;Spring Cloud 2022.0.3&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href=&quot;https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/2022.0.3/&quot;&gt;Maven Central&lt;/a&gt;. You can check out the 2022.0.3 &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes&quot;&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Notable Changes in the 2022.0.3 Release Train&lt;/h2&gt;
&lt;p&gt;This release provides compatibility with Spring Boot 3.1.x.&lt;/p&gt;
&lt;p&gt;See all issues and pull requests for this release &lt;a href=&quot;https://github.com/orgs/spring-cloud/projects/107&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is a known defect in Spring Cloud Config related to locating the config server via service discovery.  In order to activate this feature in this release you will need to set &lt;code&gt;spring.cloud.config.discovery.enabled=true&lt;/code&gt; and &lt;code&gt;spring.cloud.config.discovery.serviceId&lt;/code&gt; in an environment variable or as a system property.  This bug will be addressed in the next release.&lt;/p&gt;
&lt;h3&gt;Spring Cloud Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Support for Spring Integration, see &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/pull/1032&quot;&gt;(1032)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Commons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds a fix for certain situations where bootstrap property sources are added to late in the application context lifecycle &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/pull/1228&quot;&gt;(1228)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Gateway&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds the ability to batch add routes via actuator &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/2915&quot;&gt;(2915)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Adds the ability to refresh a subset of routes via actuator &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/2916&quot;&gt;(2916)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Stream&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds support for regular expression-based destination patterns in Kafka reactive binder &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/issues/2709&quot;&gt;(2709)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Adds initial support for deploying existing Spring MVC REST applications to serverless platforms such as AWS Lambda Functions and Azure Functions.&lt;/li&gt;
&lt;li&gt;New Spring Integration module which allows you to use Spring Cloud Function in Spring Integration DSL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Config&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Support for profile specific config data &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/pull/2260&quot;&gt;(2260)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Netflix&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fixes an issue of referencing Jersey 1 classes instead of Jersey 3 &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/issues/4176&quot;&gt;(4176)&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/issues/4177&quot;&gt;(4177)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;The following modules were updated as part of 2022.0.3:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Issues&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Kubernetes&lt;/td&gt;
&lt;td&gt;3.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/milestone/58?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Task&lt;/td&gt;
&lt;td&gt;3.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-task/releases/tag/v3.0.3&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Function&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/milestone/47?closed=1&quot;&gt;issues&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Commons&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/milestone/113?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Circuitbreaker&lt;/td&gt;
&lt;td&gt;3.0.2&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Openfeign&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-openfeign/milestone/64?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Gateway&lt;/td&gt;
&lt;td&gt;4.0.6&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/milestone/83?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Stream&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/milestone/87?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Contract&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-contract/milestone/101?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Config&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/milestone/115?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Build&lt;/td&gt;
&lt;td&gt;4.0.3&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Starter Build&lt;/td&gt;
&lt;td&gt;2022.0.3&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Netflix&lt;/td&gt;
&lt;td&gt;4.0.2&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/milestone/121?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href=&quot;https://github.com/spring-cloud/&quot;&gt;GitHub&lt;/a&gt;, on &lt;a href=&quot;https://gitter.im/spring-cloud/spring-cloud&quot;&gt;Gitter&lt;/a&gt;, on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud&quot;&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href=&quot;https://twitter.com/SpringCloud&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;Please watch our &lt;a href=&quot;https://github.com/orgs/spring-cloud/projects/103&quot;&gt;Github Projects&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-release/milestones?direction=asc&amp;#x26;sort=due_date&amp;#x26;state=open&quot;&gt;Release Milestones&lt;/a&gt; to track our 2023.0 Release Train (aka Leyton).&lt;/p&gt;
&lt;h2&gt;Getting Started With 2022.0.3&lt;/h2&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;
&amp;#x3C;dependencyManagement&gt;
    &amp;#x3C;dependencies&gt;
        &amp;#x3C;dependency&gt;
            &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
            &amp;#x3C;artifactId&gt;spring-cloud-dependencies&amp;#x3C;/artifactId&gt;
            &amp;#x3C;version&gt;2022.0.3&amp;#x3C;/version&gt;
            &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
            &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
        &amp;#x3C;/dependency&gt;
    &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;
&amp;#x3C;dependencies&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-config&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-netflix-eureka-client&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    ...
&amp;#x3C;/dependencies&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;plugins {
  id &apos;java&apos;
  id &apos;org.springframework.boot&apos; version &apos;3.1.0&apos;
  id &apos;io.spring.dependency-management&apos; version &apos;1.1.0&apos;
}

repositories {
  mavenCentral()
}

ext {
  set(&apos;springCloudVersion&apos;, &quot;2022.0.3&quot;)
}

dependencies {
  implementation &apos;org.springframework.cloud:spring-cloud-starter-config&apos;
  implementation &apos;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&apos;
}

dependencyManagement {
  imports {
    mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Java Developer Advocate Billy Korando on the latest and greatest in Java]]></title><link>https://spring.io/blog/2023/05/25/a-bootiful-podcast-java-developer-advocate-billy-korando-on-the-latest-and</link><guid isPermaLink="true">https://spring.io/blog/2023/05/25/a-bootiful-podcast-java-developer-advocate-billy-korando-on-the-latest-and</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 25 May 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment, Josh Long (@starbuxman) talks to Java Developer Advocate Billy Korando, recorded live from the amazing Spring I/O show in Barcelona, Spain!&lt;/p&gt;
&lt;iframe title=&quot;Java Developer Advocate Billy Korando on the latest and greatest in Java&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=yq5yb-141a01e-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item></channel></rss>